#! /usr/bin/zsh
#
exists() { type $1 >/dev/null 2>&1; return $?; }

bindkey -e
stty -ixon

setopt no_beep
setopt auto_pushd
setopt noclobber
setopt append_history
setopt share_history
setopt hist_ignore_dups
setopt auto_param_slash
setopt mark_dirs
setopt magic_equal_subst

export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
export HISTFILE=${HOME}/.zsh_history
export HISTCONTROL=ignoreboth
export HISTSIZE=10000
export SAVEHIST=100000
export HISTFILESIZE=100000
export HISTTIMEFORMAT="%h %d %H:%M:%S "
export ZSH_AUTOSUGGEST_STRATEGY='completion'
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_DEFAULT_OPTS='--height 90% --reverse --border'
export FZF_COMPLETION_TRIGGER='jj'
if [ -z "$NVIM_LISTEN_ADDRESS" ]; then
    export VISUAL="nvim"
    export EDITOR="nvim"
else
    export VISUAL="nvr -cc split --remote-wait +'set bufhidden=wipe'"
    export EDITOR="nvr -cc split --remote-wait +'set bufhidden=wipe'"
fi

case "$TERM" in
  xterm*)
  if [ -f /usr/share/terminfo/x/xterm-256color ]; then
  export TERM=xterm-256color
  elif [ -f /usr/share/terminfo/x/xterm-debian ]; then
    export TERM=xterm-debian
  elif [ -f /usr/share/terminfo/x/xterm-color ]; then
    export TERM=xterm-color
  else
    export TERM=xterm
  fi ;;
esac

# open tmux on startup
if [ $UID -ne 0 ] && [ -z "$TMUX" ]; then
    base_session='auto'
    tmux has-session -t $base_session || tmux new-session -d -s $base_session
    client_cnt=$(tmux list-clients | wc -l)
    if [ $client_cnt -ge 1 ]; then
        session_name=$base_session"-"$client_cnt
        tmux new-session -d -t $base_session -s $session_name
        tmux -2 attach-session -t $session_name \; set-option destroy-unattached
    else
        tmux -2 attach-session -t $base_session
    fi
fi

export GOPATH="${HOME}/go"
export PATH=${PATH}:${HOME}/bin:/home/linuxbrew/.linuxbrew/bin:${GOPATH}/bin:${HOME}/.pub-cache/bin

exists bat && export MANPAGER="sh -c 'col -bx | bat -l man -p'"
exists /usr/bin/lesspipe && eval "$(SHELL=/bin/sh lesspipe)"

eval "$(starship init zsh)"

[ -f ~/.fzf.zsh ] && . ~/.fzf.zsh
[ -f /usr/share/zsh-completion/zsh_completion ] && . /usr/share/zsh-completion/zsh_completion
[ -d ${HOME}/.asdf ] && . ${HOME}/.asdf/asdf.sh
if uname -r | grep -q -i 'microsoft'; then
    [ -f ~/.zshrc_dir/wsl ] && .  ~/.zshrc_dir/wsl
fi

fpath=(${ASDF_DIR}/completions $fpath)
autoload -Uz compinit && compinit
autoload colors && colors
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey '^p' history-beginning-search-backward-end
bindkey '^n' history-beginning-search-forward-end

[ -d ~/.antigen ] && touch ~/.antigen/debug.log && rm -f ~/.antigen/.lock
[ -f ~/.antigen.zsh ] && .  ~/.antigen.zsh
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle paulirish/git-open
exists kubectl && . <(kubectl completion zsh) && compdef k=kubectl

[ -f ~/.zshrc_dir/commands ] && . ~/.zshrc_dir/commands
[ -f ~/.zsh_aliases ] && . ~/.zsh_aliases
[ -f ~/.zshrc.local ] && . ~/.zshrc.local

